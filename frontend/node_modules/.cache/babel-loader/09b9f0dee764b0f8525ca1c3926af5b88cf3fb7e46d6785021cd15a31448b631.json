{"ast":null,"code":"var _jsxFileName = \"/home/usherking/projects/Rust/per_work/Poll_app/frontend/src/components/PollList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PollList() {\n  _s();\n  useEffect(() => {\n    fetch('/api/polls').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPolls(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []);\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PollList\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading polls...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list\",\n      children: polls.map(poll => /*#__PURE__*/_jsxDEV(PollItem, {\n        poll: poll\n      }, poll.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Polls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PollList, \"YxFipNv7EpK/OaFMC7hwvf2qLws=\");\n_c = PollList;\nexport default PollList;\nvar _c;\n$RefreshReg$(_c, \"PollList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PollList","_s","fetch","then","response","ok","Error","json","data","setPolls","setLoading","catch","error","setError","message","polls","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","poll","PollItem","id","_c","$RefreshReg$"],"sources":["/home/usherking/projects/Rust/per_work/Poll_app/frontend/src/components/PollList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction PollList() {\n  useEffect(() => {\n    fetch('/api/polls')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setPolls(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []);\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  return (\n    <div className=\"PollList\">\n      {error && <div className=\"error\">{error}</div>}\n      {loading ? (\n        <div className=\"loading\">Loading polls...</div>\n      ) : (\n        <div className=\"poll-list\">\n          {polls.map(poll => (\n            <PollItem key={poll.id} poll={poll} />\n          ))}\n        </div>\n      )}\n      <h2>Polls</h2>\n      {/* Poll list implementation would go here */}\n    </div>\n  );\n}\n\nexport default PollList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClBJ,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZC,QAAQ,CAACD,IAAI,CAAC;MACdE,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC;MACvBJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,MAAM,CAACK,KAAK,EAAEN,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,OAAO,EAAEN,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,oBACEG,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtBN,KAAK,iBAAIb,OAAA;MAAKkB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEN;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7CN,OAAO,gBACNjB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE/CvB,OAAA;MAAKkB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBH,KAAK,CAACQ,GAAG,CAACC,IAAI,iBACbzB,OAAA,CAAC0B,QAAQ;QAAeD,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACDvB,OAAA;MAAAmB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEX,CAAC;AAEV;AAACrB,EAAA,CArCQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}