{"ast":null,"code":"var _jsxFileName = \"/home/usherking/projects/Rust/per_work/Poll_app/frontend/src/components/PollList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PollItem from './PollItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PollList() {\n  _s();\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/polls').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setPolls(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setLoading(false);\n    });\n  }, []);\n  const handleVote = (pollId, optionIndex) => {\n    fetch(`http://localhost:8000/poll/${pollId}/vote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        option_index: optionIndex\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Refresh the polls list after voting\n        window.location.reload();\n      }\n    }).catch(error => {\n      console.error('Error voting:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PollList\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading polls...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll-list\",\n      children: polls.map(poll => /*#__PURE__*/_jsxDEV(PollItem, {\n        poll: poll,\n        onVote: optionIndex => handleVote(poll.id, optionIndex)\n      }, poll.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Polls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(PollList, \"B8AWj4szdhfOfEkx2d6ffSZGtXI=\");\n_c = PollList;\nexport default PollList;\nvar _c;\n$RefreshReg$(_c, \"PollList\");","map":{"version":3,"names":["React","useState","useEffect","PollItem","jsxDEV","_jsxDEV","PollList","_s","polls","setPolls","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","data","catch","message","handleVote","pollId","optionIndex","method","headers","body","JSON","stringify","option_index","window","location","reload","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","poll","onVote","id","_c","$RefreshReg$"],"sources":["/home/usherking/projects/Rust/per_work/Poll_app/frontend/src/components/PollList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PollItem from './PollItem';\n\nfunction PollList() {\n  const [polls, setPolls] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/polls')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setPolls(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleVote = (pollId, optionIndex) => {\n    fetch(`http://localhost:8000/poll/${pollId}/vote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ option_index: optionIndex }),\n    })\n    .then(response => {\n      if (response.ok) {\n        // Refresh the polls list after voting\n        window.location.reload();\n      }\n    })\n    .catch(error => {\n      console.error('Error voting:', error);\n    });\n  };\n\n  return (\n    <div className=\"PollList\">\n      {error && <div className=\"error\">{error}</div>}\n      {loading ? (\n        <div className=\"loading\">Loading polls...</div>\n      ) : (\n        <div className=\"poll-list\">\n          {polls.map(poll => (\n            <PollItem key={poll.id} poll={poll} onVote={(optionIndex) => handleVote(poll.id, optionIndex)} />\n          ))}\n        </div>\n      )}\n      <h2>Polls</h2>\n    </div>\n  );\n}\n\nexport default PollList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}